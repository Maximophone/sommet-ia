---
import Button from './Button.astro';
---

<form method="POST" class="newsletter-form">
  <h3 class="text-lg font-semibold tracking-tight text-blue-900">
    Inscrivez-vous aux notifications <span aria-hidden="true">&darr;</span>
  </h3>
  
  <div class="mt-5 flex rounded-3xl bg-white py-2.5 pr-2.5 shadow-xl shadow-blue-900/5 focus-within:ring-2 focus-within:ring-blue-900">
    <input
      type="email"
      required
      name="email"
      placeholder="Adresse email"
      aria-label="Adresse email"
      class="-my-2.5 flex-auto bg-transparent pl-6 pr-2.5 text-base text-slate-900 placeholder:text-slate-400 focus:outline-none"
    />
    <Button type="submit">
      <span class="sr-only sm:not-sr-only">S'inscrire</span>
      <span class="sm:hidden">
        <svg 
          aria-hidden="true" 
          viewBox="0 0 24 24" 
          class="h-6 w-6"
        >
          <path
            d="m14 7 5 5-5 5M19 12H5"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      </span>
    </Button>
  </div>
  
  <div id="form-status" class="hidden mt-4">
    <div class="flex items-center gap-3 rounded-2xl p-4">
      <svg id="status-icon" class="h-5 w-5" viewBox="0 0 24 24"></svg>
      <p class="text-sm font-medium tracking-tight"></p>
    </div>
  </div>
</form>

<script>
  import { actions } from 'astro:actions';

  const form = document.querySelector('.newsletter-form');
  const statusMessage = document.getElementById('form-status')?.querySelector('div');
  const statusIcon = document.getElementById('status-icon');
  const statusText = statusMessage?.querySelector('p');

  const icons = {
    loading: `
      <path
        d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16z"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
      />
      <path
        d="M20 12h2"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        class="opacity-25"
      />
    `,
    success: `
      <path
        d="M20 6L9 17l-5-5"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    `,
    error: `
      <path
        d="M12 9v4M12 17h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    `
  };

  form?.addEventListener('submit', async (event) => {
    event.preventDefault();
    
    try {
      // Loading state
      statusMessage?.parentElement?.classList.remove('hidden');
      statusMessage?.classList.remove('bg-green-50', 'bg-red-50');
      statusMessage?.classList.add('bg-blue-50');
      if (statusIcon) statusIcon.innerHTML = icons.loading;
      statusIcon?.classList.remove('text-green-600', 'text-red-600');
      statusIcon?.classList.add('text-blue-600', 'animate-spin');
      if (statusText) statusText.textContent = 'Envoi en cours...';
      
      const formData = new FormData(form);
      const { error } = await actions.newsletter(formData);
      
      if (error) throw error;
      
      // Success state
      statusMessage?.classList.remove('bg-blue-50');
      statusMessage?.classList.add('bg-green-50');
      if (statusIcon) statusIcon.innerHTML = icons.success;
      statusIcon?.classList.remove('text-blue-600', 'animate-spin');
      statusIcon?.classList.add('text-green-600');
      if (statusText) statusText.textContent = 'Inscription réussie !';
      form.reset();
      
      // Hide after 5 seconds
      setTimeout(() => {
        statusMessage?.parentElement?.classList.add('hidden');
      }, 5000);
      
    } catch (error) {
      // Error state
      statusMessage?.classList.remove('bg-blue-50');
      statusMessage?.classList.add('bg-red-50');
      if (statusIcon) statusIcon.innerHTML = icons.error;
      statusIcon?.classList.remove('text-blue-600', 'animate-spin');
      statusIcon?.classList.add('text-red-600');
      if (statusText) statusText.textContent = 'Une erreur est survenue. Veuillez réessayer.';
    }
  });
</script> 