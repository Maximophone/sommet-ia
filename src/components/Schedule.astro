---
import { getCollection } from 'astro:content';
import Container from './Container.astro';
import BackgroundImage from './BackgroundImage.astro';
import SpeakerImage from './SpeakerImage.astro';

const schedule = await getCollection('schedule')
---

<section id="schedule" aria-label="Schedule" class="py-20 sm:py-32">
  <Container class="relative z-10">
    <div class="mx-auto max-w-2xl lg:mx-0 lg:max-w-4xl lg:pr-24">
      <h2 class="font-display text-4xl font-medium tracking-tighter text-blue-600 sm:text-5xl">
        Programme
      </h2>
      <p class="mt-4 font-display text-2xl tracking-tight text-blue-900">
        La journée s'articulera autour de moments forts : une grande conférence plénière en matinée, suivie de 
        deux tables rondes thématiques réunissant des intervenants de premier plan. Les participants pourront 
        également découvrir un espace d'exposition dynamique où seront présentés des projets innovants. Un concours 
        spécial mettra en lumière les propositions les plus prometteuses, dont le lauréat sera dévoilé lors de la 
        session finale de présentations. Des temps d'échange sont prévus tout au long de la journée, permettant une 
        véritable interaction entre intervenants et participants. L'espace d'exposition restera accessible en continu, 
        offrant la possibilité aux visiteurs de découvrir les stands indépendamment des conférences.
      </p>
    </div>
  </Container>
  <div class="relative mt-14 sm:mt-24">
    <BackgroundImage position="right" class="-bottom-32 -top-40" />
    <Container class="relative">
      <div class="mt-10 rounded-2xl bg-white/60 backdrop-blur">
        <ol role="list" class="divide-y divide-blue-900/5">
          {schedule.map((timeSlot) => (
            <li class="relative px-6 py-6 lg:px-10 lg:py-8">
              <div class="grid grid-cols-1 gap-6 lg:grid-cols-4 lg:gap-8">
                {/* Time and Details Column */}
                <div class="lg:col-span-3">
                  <div class="flex flex-col">
                    {timeSlot.data.speaker === undefined ? (
                      <>
                        <h3 class="text-lg font-semibold tracking-tight text-blue-900">
                          [À déterminer]
                        </h3>
                        <p class="mt-1 font-mono text-md font-medium text-blue-600">
                          {timeSlot.data.type}
                        </p>
                      </>
                    ) : timeSlot.data.speaker ? (
                      <>
                        <h3 class="text-lg font-semibold tracking-tight text-blue-900">
                          {timeSlot.data.speaker.name}
                        </h3>
                        <p class="mt-1 font-mono text-md font-medium text-blue-600">
                          {timeSlot.data.type}
                        </p>
                      </>
                    ) : (
                      <h3 class="text-lg font-semibold tracking-tight text-blue-900">
                        {timeSlot.data.type}
                      </h3>
                    )}
                    <p class="mt-2 text-base tracking-tight text-blue-900">
                      {timeSlot.data.description}
                    </p>
                    <p class="mt-2 font-mono text-sm text-slate-500">
                      <time>{timeSlot.data.start}</time>
                      {' - '}
                      <time>{timeSlot.data.end}</time>
                    </p>
                  </div>
                </div>

                {/* Speaker Image Column */}
                {timeSlot.data.speaker && (
                  <div class="lg:col-span-1">
                    <div class="flex justify-end">
                      <div class="w-16 flex-none lg:w-32">
                        <SpeakerImage speaker={timeSlot.data.speaker} />
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </li>
          ))}
        </ol>
      </div>
    </Container>
  </div>
</section> 